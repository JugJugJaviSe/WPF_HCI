<UserControl x:Class="NetworkService.Views.NetworkDisplayView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NetworkService.Model"
             xmlns:root="clr-namespace:NetworkService"
             xmlns:viewModel="clr-namespace:NetworkService.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="900">

    

    <UserControl.Resources>

        <SolidColorBrush x:Key="UIPrimaryColor" Color="#FFE0E0E0"/>
        <SolidColorBrush x:Key="UISecondaryColor" Color="#1B1B1B"/>
        <SolidColorBrush x:Key="UIAccentColor" Color="#FF0078D7"/>
        <SolidColorBrush x:Key="UIAccentLightColor" Color="#FF3D9AD1"/>
        <SolidColorBrush x:Key="UITertiaryColor" Color="#FF3E3E42"/>
        <SolidColorBrush x:Key="CardBackgroundColor" Color="LightGray"/>
        <SolidColorBrush x:Key="CardBackgroundColor1" Color="#FF2D2D30" />
        <SolidColorBrush x:Key="PanelBackgroundColor" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="ErrorColor" Color="#FFFF5252"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#FF4CAF50"/>
        <SolidColorBrush x:Key="LabelColor" Color="#FFCCCCCC"/>
        <SolidColorBrush x:Key="BorderColor" Color="#FF454545"/>
        <SolidColorBrush x:Key="HeaderBlueColor" Color="#FF0078D7"/>

        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF0066CC" Offset="0"/>
            <GradientStop Color="#FF0078D7" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor1}"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="CaretBrush" Value="{StaticResource UIAccentColor}"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource UIAccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="Background" Value="{StaticResource UIAccentColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource UIAccentLightColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource UITertiaryColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmallTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
        </Style>

        <Style x:Key="TreeViewStyle" TargetType="TreeView">
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor1}"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style x:Key="CanvasStyle" TargetType="Canvas">
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style x:Key="ClearButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </UserControl.Resources>

    <Grid Background="{StaticResource PanelBackgroundColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Background="{StaticResource UISecondaryColor}" Padding="15">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="{StaticResource CardBackgroundColor1}" CornerRadius="4" Margin="0,0,0,10">
                    <StackPanel>
                        <Border Background="{StaticResource HeaderGradient}" CornerRadius="4,4,0,0" Padding="10">
                            <TextBlock Text="Server Tree" Style="{StaticResource SectionHeaderStyle}" Margin="0" TextAlignment="Center"/>
                        </Border>

                        <TreeView Name="ServersTreeView"
                          Grid.Row="0"
                          ItemsSource="{Binding AllServers}"
                          Style="{StaticResource TreeViewStyle}"
                          Margin="10"
                          Height="300">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseMove">
                                    <i:InvokeCommandAction Command="{Binding DragCommand}" 
                                                  CommandParameter="{Binding SelectedItem, ElementName=ServersTreeView}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type root:ServersByType}" ItemsSource="{Binding Servers}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontWeight="SemiBold" Text="{Binding TypeName}" Foreground="{StaticResource UIPrimaryColor}"/>
                                        <TextBlock FontWeight="SemiBold" Text=" Servers" Foreground="{StaticResource UIPrimaryColor}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>

                                <DataTemplate DataType="{x:Type local:Server}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Id}" Margin="0,0,5,0" Foreground="{StaticResource UIPrimaryColor}"/>
                                        <TextBlock Text="{Binding ServerName}" Foreground="{StaticResource UIPrimaryColor}"/>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction 
                                            Command="{Binding DataContext.MouseDownCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                            CommandParameter="{Binding}" />
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="MouseMove">
                                                <i:InvokeCommandAction 
                                            Command="{Binding DataContext.MouseMoveCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                            CommandParameter="{Binding}" />
                                            </i:EventTrigger>

                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction 
                                            Command="{Binding DataContext.ResetDragCommand, RelativeSource={RelativeSource AncestorType=TreeView}}" 
                                            CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </StackPanel>
                                </DataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </StackPanel>
                </Border>

                <Border Grid.Row="1" Background="{StaticResource CardBackgroundColor1}" CornerRadius="4" Margin="0,0,0,10">
                    <StackPanel>
                        <Border Background="{StaticResource HeaderGradient}" CornerRadius="4,4,0,0" Padding="10">
                            <TextBlock Text="Terminal" Style="{StaticResource SectionHeaderStyle}" Margin="0" TextAlignment="Center"/>
                        </Border>

                        <StackPanel Margin="10">
                            <TextBox Text="{Binding TerminalText, UpdateSourceTrigger=PropertyChanged}" 
                                     Style="{StaticResource InputTextBoxStyle}" Height="50" 
                                     VerticalContentAlignment="Center" HorizontalContentAlignment="Center" TextWrapping="Wrap" AcceptsReturn="True"/>

                            <TextBlock Style="{StaticResource SmallTextStyle}" TextAlignment="Center" Margin="0,5,0,0">
                                Tip: Type the ServerID<Run FontWeight="Bold">c</Run> to clear
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <Button Grid.Row="2" Content="Undo" Command="{Binding UndoCommand}" 
                        Style="{StaticResource PrimaryButtonStyle}" HorizontalAlignment="Stretch" Margin="0,0,0,10"/>
            </Grid>
        </Border>
        
        <Border Grid.Column="1" Padding="15" Background="{StaticResource UISecondaryColor}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" CornerRadius="4" Padding="10" Margin="0,0,0,10">
                    <TextBlock Text="Network Display" 
                               Foreground="{StaticResource UIPrimaryColor}" 
                               FontSize="18" FontWeight="Bold" HorizontalAlignment="Center"/>
                </Border>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DockPanel Grid.Row="0" Grid.Column="0" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas1}"/>
                        <Canvas x:Name="Canvas1" Tag="1" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas1}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas1}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas1}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas1}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas2}"/>
                        <Canvas x:Name="Canvas2" Tag="2" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas2}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas2}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas2}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas2}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="0" Grid.Column="2" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas3}"/>
                        <Canvas x:Name="Canvas3" Tag="3" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas3}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas3}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas3}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas3}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="0" Grid.Column="3" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas4}"/>
                        <Canvas x:Name="Canvas4" Tag="4" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas4}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas4}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas4}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas4}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="1" Grid.Column="0" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas5}"/>
                        <Canvas x:Name="Canvas5" Tag="5" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas5}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas5}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas5}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas5}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="1" Grid.Column="1" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas6}"/>
                        <Canvas x:Name="Canvas6" Tag="6" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas6}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas6}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas6}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas6}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="1" Grid.Column="2" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas7}"/>
                        <Canvas x:Name="Canvas7" Tag="7" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas7}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas7}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas7}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas7}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="1" Grid.Column="3" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas8}"/>
                        <Canvas x:Name="Canvas8" Tag="8" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas8}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas8}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas8}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas8}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="2" Grid.Column="0" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas9}"/>
                        <Canvas x:Name="Canvas9" Tag="9" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas9}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas9}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas9}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas9}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="2" Grid.Column="1" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas10}"/>
                        <Canvas x:Name="Canvas10" Tag="10" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas10}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas10}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas10}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas10}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="2" Grid.Column="2" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas11}"/>
                        <Canvas x:Name="Canvas11" Tag="11" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas11}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas11}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas11}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas11}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <DockPanel Grid.Row="2" Grid.Column="3" LastChildFill="True">
                        <Button Content="Clear" Style="{StaticResource ClearButtonStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                                Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=Canvas12}"/>
                        <Canvas x:Name="Canvas12" Tag="12" Style="{StaticResource CanvasStyle}" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding CanvasLoadedCommand}" CommandParameter="{Binding ElementName=Canvas12}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Drop">
                                    <i:InvokeCommandAction Command="{Binding DropCommand}" CommandParameter="{Binding ElementName=Canvas12}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding MouseDownCanvasCommand}" CommandParameter="{Binding ElementName=Canvas12}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCanvasCommand}" CommandParameter="{Binding ElementName=Canvas12}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBlock Text="" FontSize="12" Margin="50 5" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource UIPrimaryColor}"/>
                        </Canvas>
                    </DockPanel>

                    <Canvas x:Name="LineCanvas" IsHitTestVisible="False" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="3">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding SetLineCanvasCommand}" CommandParameter="{Binding ElementName=LineCanvas}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ItemsControl ItemsSource="{Binding Lines}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Line 
                                        X1="{Binding X1}" 
                                        Y1="{Binding Y1}" 
                                        X2="{Binding X2}" 
                                        Y2="{Binding Y2}" 
                                        Stroke="{Binding Stroke}" 
                                        StrokeThickness="{Binding StrokeThickness}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Canvas>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>