<UserControl x:Class="NetworkService.Views.NetworkEntitiesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NetworkService.Views"
             xmlns:model="clr-namespace:NetworkService.Model"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="900">

    <UserControl.Resources>
        
        <SolidColorBrush x:Key="UIPrimaryColor" Color="#FFE0E0E0"/>
        <SolidColorBrush x:Key="UISecondaryColor" Color="#1B1B1B"/>
        <SolidColorBrush x:Key="UIAccentColor" Color="#FF0078D7"/>
        <SolidColorBrush x:Key="UIAccentLightColor" Color="#FF3D9AD1"/>
        <SolidColorBrush x:Key="UITertiaryColor" Color="#FF3E3E42"/>
        <SolidColorBrush x:Key="CardBackgroundColor" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="PanelBackgroundColor" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="ErrorColor" Color="#FFFF5252"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#FF4CAF50"/>
        <SolidColorBrush x:Key="LabelColor" Color="#FFCCCCCC"/>
        <SolidColorBrush x:Key="BorderColor" Color="#FF454545"/>
        <SolidColorBrush x:Key="HeaderBlueColor" Color="#FF0078D7"/>

        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF0066CC" Offset="0"/>
            <GradientStop Color="#FF0078D7" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="TableHeaderGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF005A9E" Offset="0"/>
            <GradientStop Color="#FF0078D7" Offset="0.5"/>
            <GradientStop Color="#FF005A9E" Offset="1"/>
        </LinearGradientBrush>

        <PathGeometry x:Key="DownArrow">
            <PathFigure StartPoint="0,0">
                <LineSegment Point="5,5"/>
                <LineSegment Point="10,0"/>
            </PathFigure>
        </PathGeometry>

        <PathGeometry x:Key="RightArrow">
            <PathFigure StartPoint="0,0">
                <LineSegment Point="5,5"/>
                <LineSegment Point="0,10"/>
            </PathFigure>
        </PathGeometry>

        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <Style x:Key="CollapsibleHeaderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource HeaderGradient}"/>
            <Setter Property="CornerRadius" Value="4,4,0,0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="InputLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>

        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="CaretBrush" Value="{StaticResource UIAccentColor}"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource UIAccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InputComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource UIAccentLightColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="Background" Value="{StaticResource UIAccentColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource UIAccentLightColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrow}" Stroke="{StaticResource UIPrimaryColor}" StrokeThickness="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsAddSectionExpanded}" Value="False">
                                <Setter TargetName="Arrow" Property="Data" Value="{StaticResource RightArrow}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleManagementButtonStyle" TargetType="Button" BasedOn="{StaticResource ToggleButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrow}" Stroke="{StaticResource UIPrimaryColor}" StrokeThickness="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsManagementSectionExpanded}" Value="False">
                                <Setter TargetName="Arrow" Property="Data" Value="{StaticResource RightArrow}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleTerminalButtonStyle" TargetType="Button" BasedOn="{StaticResource ToggleButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrow}" Stroke="{StaticResource UIPrimaryColor}" StrokeThickness="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsTerminalSectionExpanded}" Value="False">
                                <Setter TargetName="Arrow" Property="Data" Value="{StaticResource RightArrow}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ErrorTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource ErrorColor}"/>
            <Setter Property="Margin" Value="0,5,0,10"/>
        </Style>

        <Style x:Key="SmallTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
        </Style>

        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource CardBackgroundColor}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource UITertiaryColor}"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="RowHeight" Value="70"/>
            <Setter Property="ColumnHeaderHeight" Value="40"/>
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource TableHeaderGradient}"/>
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="BorderBrush" Value="{StaticResource UIAccentColor}"/>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                      RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource UIAccentColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Background="{StaticResource PanelBackgroundColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

       
        <Border Grid.Column="0" Background="{StaticResource UISecondaryColor}" Padding="15">
            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                <StackPanel>

                    <Border Background="{StaticResource CardBackgroundColor}" CornerRadius="6" Margin="0,0,0,20">
                        <StackPanel>
                            <Border Style="{StaticResource CollapsibleHeaderStyle}">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ToggleAddSectionCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Grid>
                                    <TextBlock Text="Add New Server" Style="{StaticResource SectionHeaderStyle}" Margin="0" TextAlignment="Center"/>
                                    <Button Style="{StaticResource ToggleButtonStyle}" IsEnabled="False">
                                    </Button>
                                </Grid>
                            </Border>

                            <StackPanel Visibility="{Binding IsAddSectionExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel Margin="15">
                                    <TextBlock Text="Server Name" Style="{StaticResource InputLabelStyle}"/>
                                    <TextBox x:Name="CurrentServerName" Text="{Binding CurrentServer.ServerName, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource InputTextBoxStyle}" Margin="0,0,0,5"/>

                                    <TextBlock Text="{Binding CurrentServer.ValidationErrors[ServerName]}" Style="{StaticResource ErrorTextStyle}"/>

                                    <TextBlock Text="IP Address" Style="{StaticResource InputLabelStyle}"/>
                                    <TextBox Text="{Binding CurrentServer.IpAddress, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource InputTextBoxStyle}" Margin="0,0,0,5"/>
                                    <TextBlock Text="{Binding CurrentServer.ValidationErrors[IpAddress]}" Style="{StaticResource ErrorTextStyle}"/>

                                    <TextBlock Text="Server Type" Style="{StaticResource InputLabelStyle}"/>
                                    <ComboBox ItemsSource="{Binding ServerTypes}" SelectedItem="{Binding CurrentServer.TypeName}" 
                                          Style="{StaticResource InputComboBoxStyle}" Margin="0,0,0,15"/>

                                    <Button Content="Add Server" Command="{Binding AddCommand}" 
                                        Style="{StaticResource PrimaryButtonStyle}" HorizontalAlignment="Stretch"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <Border Background="{StaticResource CardBackgroundColor}" CornerRadius="6" Margin="0,0,0,20">
                        <StackPanel>
                            <Border Style="{StaticResource CollapsibleHeaderStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ToggleManagementSectionCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <TextBlock Text="Server Management" Style="{StaticResource SectionHeaderStyle}" Margin="0" TextAlignment="Center"/>
                                    <Button Style="{StaticResource ToggleManagementButtonStyle}" IsEnabled="False">
                                    </Button>
                                </Grid>
                            </Border>

                            <StackPanel Visibility="{Binding IsManagementSectionExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel Margin="15">
                                    <TextBlock Text="Filter By:" Style="{StaticResource InputLabelStyle}"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <RadioButton Content="Name" GroupName="filter" IsChecked="{Binding IsNameFilterSelected}" 
                                                 Style="{StaticResource RadioButtonStyle}"/>
                                        <RadioButton Content="Type" GroupName="filter" IsChecked="{Binding IsTypeFilterSelected}" 
                                                 Style="{StaticResource RadioButtonStyle}"/>
                                    </StackPanel>

                                    <TextBox Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource InputTextBoxStyle}" Margin="0,0,0,15"/>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                        <Button Content="Undo" Command="{Binding UndoCommand}" 
                                            Style="{StaticResource PrimaryButtonStyle}" Margin="0,0,10,0" Width="100"/>
                                        <Button Content="Delete" Command="{Binding DeleteCommand}" 
                                            Style="{StaticResource PrimaryButtonStyle}" Width="100"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <Border Background="{StaticResource CardBackgroundColor}" CornerRadius="6">
                        <StackPanel>
                            <Border Style="{StaticResource CollapsibleHeaderStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ToggleTerminalSectionCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <TextBlock Text="Terminal" Style="{StaticResource SectionHeaderStyle}" Margin="0" TextAlignment="Center"/>
                                    <Button Style="{StaticResource ToggleTerminalButtonStyle}" IsEnabled="False">
                                    </Button>
                                </Grid>
                            </Border>

                            <StackPanel Visibility="{Binding IsTerminalSectionExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel Margin="15">
                                    <TextBox Text="{Binding TerminalText, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource InputTextBoxStyle}" Height="80" 
                                         VerticalContentAlignment="Top" HorizontalContentAlignment="Center" TextWrapping="Wrap" AcceptsReturn="True" TextAlignment="Center"/>

                                    <TextBlock Style="{StaticResource SmallTextStyle}">
                                    Tip: Type the ServerID<Run FontWeight="Bold">d</Run> to delete</TextBlock>

                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Border>

<Border Grid.Column="1" Padding="15" Background="{StaticResource UISecondaryColor}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Background="{StaticResource HeaderGradient}" CornerRadius="4" Padding="10" Margin="0,0,0,10">
            <TextBlock Text="Server List" 
                       Foreground="{StaticResource UIPrimaryColor}" 
                       FontSize="18" FontWeight="Bold"/>
        </Border>

        <DataGrid x:Name="ServersDataGrid" Grid.Row="1"
                  Style="{StaticResource DataGridStyle}"
                  ItemsSource="{Binding Servers}"
                  SelectedItem="{Binding SelectedServer}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  CanUserResizeColumns="True"
                  CanUserSortColumns="True"
                  AutoGenerateColumns="False">

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="20" MinWidth="40"/>
                <DataGridTextColumn Header="Name" Binding="{Binding ServerName}" Width="2*"/>
                <DataGridTextColumn Header="IP Address" Binding="{Binding IpAddress}" Width="2*"/>
                <DataGridTextColumn Header="Type" Binding="{Binding ServerTypeProperty.Name}" Width="1.5*"/>
                <DataGridTextColumn Header="Value" Binding="{Binding CurrentValue, StringFormat={}{0}%}" Width="60"/>

                <DataGridTemplateColumn Header="Icon" Width="70" MinWidth="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding ServerTypeProperty.ImagePath}" 
                                Width="60" Height="60" 
                                HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Border>

    </Grid>
</UserControl>